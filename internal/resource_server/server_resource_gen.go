// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_server

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func ServerResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"additional_ip_addr_id": schema.NumberAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID дополнительного IP-адреса, который будет установлен на выделенный сервер.",
				MarkdownDescription: "ID дополнительного IP-адреса, который будет установлен на выделенный сервер.",
			},
			"bandwidth_id": schema.NumberAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID интернет-канала, который будет установлен на выделенный сервер.",
				MarkdownDescription: "ID интернет-канала, который будет установлен на выделенный сервер.",
			},
			"comment": schema.StringAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
				MarkdownDescription: "Комментарий к выделенному серверу. Максимальная длина — 255 символов.",
				Validators: []validator.String{
					stringvalidator.LengthAtMost(255),
				},
			},
			"cp_id": schema.NumberAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID панели управления, которая будет установлена на выделенный сервер.",
				MarkdownDescription: "ID панели управления, которая будет установлена на выделенный сервер.",
			},
			"id": schema.Int64Attribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID выделенного сервера.",
				MarkdownDescription: "ID выделенного сервера.",
				Validators: []validator.Int64{
					int64validator.AtLeast(1),
				},
			},
			"name": schema.StringAttribute{
				Required:            true,
				Description:         "Удобочитаемое имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
				MarkdownDescription: "Удобочитаемое имя выделенного сервера. Максимальная длина — 255 символов, имя должно быть уникальным.",
				Validators: []validator.String{
					stringvalidator.LengthAtMost(255),
				},
			},
			"network_drive_id": schema.NumberAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID сетевого диска, который будет установлен на выделенный сервер.",
				MarkdownDescription: "ID сетевого диска, который будет установлен на выделенный сервер.",
			},
			"os_id": schema.NumberAttribute{
				Optional:            true,
				Computed:            true,
				Description:         "ID операционной системы, которая будет установлена на выделенный сервер.",
				MarkdownDescription: "ID операционной системы, которая будет установлена на выделенный сервер.",
			},
			"payment_period": schema.StringAttribute{
				Required:            true,
				Description:         "Период оплаты.",
				MarkdownDescription: "Период оплаты.",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"P1M",
						"P3M",
						"P6M",
						"P1Y",
					),
				},
			},
			"plan_id": schema.NumberAttribute{
				Required:            true,
				Description:         "ID списка дополнительных услуг выделенного сервера.",
				MarkdownDescription: "ID списка дополнительных услуг выделенного сервера.",
			},
			"preset_id": schema.NumberAttribute{
				Required:            true,
				Description:         "ID тарифа выделенного сервера.",
				MarkdownDescription: "ID тарифа выделенного сервера.",
			},
		},
	}
}

type ServerModel struct {
	AdditionalIpAddrId types.Number `tfsdk:"additional_ip_addr_id"`
	BandwidthId        types.Number `tfsdk:"bandwidth_id"`
	Comment            types.String `tfsdk:"comment"`
	CpId               types.Number `tfsdk:"cp_id"`
	Id                 types.Int64  `tfsdk:"id"`
	Name               types.String `tfsdk:"name"`
	NetworkDriveId     types.Number `tfsdk:"network_drive_id"`
	OsId               types.Number `tfsdk:"os_id"`
	PaymentPeriod      types.String `tfsdk:"payment_period"`
	PlanId             types.Number `tfsdk:"plan_id"`
	PresetId           types.Number `tfsdk:"preset_id"`
}
